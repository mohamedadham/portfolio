{"version":3,"sources":["components/Header.js","components/AboutMe.js","components/Intro.js","components/MyServices.js","components/MyProjects.js","shared/projectsData.js","pages/landingpage.js","components/ProjectDetails.js","components/Footer.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","aria-label","onClick","document","body","classList","toggle","to","remove","href","AboutMe","id","src","alt","Intro","MyServices","MyProjectCard","projects","class","map","project","img","languages","projectsData","title","description","featuresIDeveloped","team","img2","githublink","link","featueresIDeveloped","LandingPage","ProjectDetails","feature","target","Footer","Main","path","component","match","filter","parseInt","params","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAqBeA,EAlBF,SAACC,GACV,OACI,gCACA,4BAAQC,UAAU,aAAaC,aAAW,oBAAoBC,QAAS,kBAAKC,SAASC,KAAKC,WAAYF,SAASC,KAAKC,UAAUC,OAAO,cACjI,0BAAMN,UAAU,eAEpB,yBAAKA,UAAU,OACX,wBAAIA,UAAU,aACV,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAAMO,GAAG,aAAaP,UAAU,YAAYE,QAAS,kBAAMC,SAASC,KAAKC,UAAUG,OAAO,cAA1F,SAC1B,wBAAIR,UAAU,aAAY,uBAAGS,KAAK,sBAAsBT,UAAU,YAAYE,QAAS,kBAAMC,SAASC,KAAKC,UAAUG,OAAO,cAAlG,gBAC1B,wBAAIR,UAAU,aAAY,uBAAGS,KAAK,mBAAmBT,UAAU,YAAYE,QAAS,kBAAMC,SAASC,KAAKC,UAAUG,OAAO,cAA/F,aAC1B,wBAAIR,UAAU,aAAY,uBAAGS,KAAK,kBAAkBT,UAAU,YAAYE,QAAS,kBAAMC,SAASC,KAAKC,UAAUG,OAAO,cAA9F,gBCO3BE,EAnBD,WACV,OACI,6BAASV,UAAU,WAAWW,GAAG,SACzB,wBAAIX,UAAU,wCAAd,YACA,uBAAGA,UAAU,8CAAb,qBACA,yBAAKA,UAAU,kBACX,+dAE8L,6BAAM,6BAFpM,qkBASJ,yBAAKY,IAAI,iBAAiBC,IAAI,6BAA6Bb,UAAU,oBCJtEc,EAXD,WACV,OACI,6BAASd,UAAU,QAAQW,GAAG,QAC1B,wBAAIX,UAAU,wCAAd,YACa,2CAAgB,yCAE7B,uBAAGA,UAAU,8CAAb,wBACA,yBAAKY,IAAI,kBAAkBC,IAAI,qCAAqCb,UAAU,iBCY3Ee,EAnBI,WACf,OACI,6BAASf,UAAU,cAAcW,GAAI,YAC7B,wBAAIX,UAAU,2CAAd,aACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,WACX,qDACA,8GAGJ,yBAAKA,UAAU,WACX,mDACA,qJAGR,uBAAGS,KAAK,QAAQT,UAAU,OAA1B,aCQDgB,EAtBO,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACI,6BAASC,MAAM,UAAUP,GAAG,QACxB,wBAAIO,MAAM,uCAAV,wBACA,uBAAGA,MAAM,6CAAT,mCAEA,yBAAKA,MAAM,aACND,GACEA,EAASE,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CAAMb,GAAE,6BAAwBa,EAAQT,IAAMO,MAAM,mBAChD,yBAAKN,IAAG,cAASQ,EAAQC,KAAOR,IAAI,GAAGK,MAAM,mBAC7C,yBAAKA,MAAM,UACP,yBAAKA,MAAM,QAAQE,EAAQE,mBCf9CC,EAAa,CACtB,CACIC,MAAM,SACNC,YAAY,+aAEZH,UAAU,mBACVI,mBAAmB,CACf,+BACA,0BACA,kDACA,wDACA,eACA,kBACA,wCACA,+BACA,+CACA,gBACA,oCACA,gGAEJC,MAAK,EACLN,IAAI,gBACJO,KAAK,gBACLC,WAAW,yCACXC,KAAK,8IACLnB,GAAG,GAEP,CACIa,MAAM,oBACNC,YAAY,oHACZH,UAAU,qBACVI,mBAAmB,CACf,sCACA,uBACA,wBACA,uBACA,iDACA,uEACA,qFACA,6FAEJC,MAAK,EACLN,IAAI,wBACJO,KAAK,wBACLC,WAAW,oDACXlB,GAAG,GAEP,CACIa,MAAM,mBACNC,YAAY,2MACZH,UAAU,mBACVI,mBAAmB,CACf,gBACA,mBACA,gBAEJC,MAAK,EACLN,IAAI,mBACJQ,WAAW,iDACXlB,GAAG,GAEP,CACIa,MAAM,4BACNC,YAAY,wKACZH,UAAU,UACVK,MAAK,EACLD,mBAAmB,CACf,8BACA,oCACA,uBAEJL,IAAI,mBACJO,KAAK,oBACLC,WAAW,4DACXlB,GAAG,GAEP,CACIa,MAAM,cACNC,YAAY,qHACZH,UAAU,SACVK,MAAK,EACLD,mBAAmB,CACf,kBACA,4BACA,uCACA,wCAEJL,IAAI,mBACJQ,WAAW,uDACXlB,GAAG,GAEP,CACIa,MAAM,aACNC,YAAY,oHACZH,UAAU,QACVK,MAAK,EACLD,mBAAmB,CACf,qBACA,sBACA,iBAEJL,IAAI,oBACJQ,WAAW,6CACXlB,GAAG,GAEP,CACIa,MAAM,OACNC,YAAY,iKACZH,UAAU,MACVS,oBAAoB,GACpBJ,MAAK,EACLN,IAAI,cACJQ,WAAW,mDACXlB,GAAG,GAEP,CACIa,MAAM,eACNC,YAAY,6CACZH,UAAU,UACVK,MAAK,EACLN,IAAI,gBACJS,KAAK,iDACLD,WAAW,8DACXlB,GAAG,GAEP,CACIa,MAAM,iBACNC,YAAY,4EACZH,UAAU,UACVK,MAAK,EACLN,IAAI,eACJO,KAAK,eACLE,KAAK,wCACLD,WAAW,wCACXlB,GAAG,GAEP,CACIa,MAAM,WACNC,YAAY,sKACZH,UAAU,UACVK,MAAK,EACLN,IAAI,kBACJS,KAAK,oDACLD,WAAW,qDACXlB,GAAG,IAEP,CACIa,MAAM,WACNC,YAAY,oEACZH,UAAU,UACVK,MAAK,EACLN,IAAI,cACJS,KAAK,0CACLD,WAAW,0CACXlB,GAAG,KCvIIqB,EAXK,SAACjC,GACjB,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAekB,SAAUM,MCyBtBU,EArCM,SAAC,GAAa,IAAZb,EAAW,EAAXA,QACnB,OACG,oCACC,kBAAC,EAAD,MACA,6BAASpB,UAAU,SACf,wBAAIA,UAAU,wCACX,gCAASoB,EAAQI,QAE5B,uBAAGxB,UAAU,8CAA8CoB,EAAQO,KAAK,oBAAqB,gBACrF,yBAAKf,IAAG,yBAAoBQ,EAAQC,KAAOR,IAAI,GAAGb,UAAU,gBAGhE,yBAAKA,UAAU,6BACX,2BAAIoB,EAAQK,aACZ,yBAAKb,IAAG,yBAAoBQ,EAAQQ,MAAQf,IAAI,KAChD,6BACC,2BAAG,sEAAH,IAAwDO,EAAQE,WAChEF,EAAQM,oBAAoB,2BAAG,yDAChC,4BACKN,EAAQM,mBAAmBP,KAAI,SAACe,GAAD,OAAW,4BAAKA,OAFvB,KAI3Bd,EAAQU,KAKV,yBAAK9B,UAAU,mBACf,uBAAGmC,OAAO,SAAS1B,KAAMW,EAAQS,WAAY7B,UAAU,OAAvD,eADA,IAC6E,uBAAGmC,OAAO,SAAS1B,KAAMW,EAAQU,KAAK9B,UAAU,OAAhD,SAL7E,2BACC,uBAAGmC,OAAO,SAAS1B,KAAMW,EAAQS,WAAY7B,UAAU,OAAvD,mBCHEoC,EArBA,WAEX,OACI,4BAAQpC,UAAU,UACd,uBAAGS,KAAK,kCAAkCT,UAAU,gBAApD,4BACA,wBAAIA,UAAU,eAEV,wBAAIA,UAAU,qBACV,uBAAGA,UAAU,oBAAoBS,KAAK,8CAClC,uBAAGT,UAAU,sBAGrB,wBAAIA,UAAU,qBACV,uBAAGA,UAAU,oBAAoBS,KAAK,oCAClC,uBAAGT,UAAU,uBCUtBqC,EAnBF,WAMT,OACI,oCACI,yBAAKrC,UAAU,WACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOsC,KAAK,yBAAyBC,UAT/B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACI,kBAAC,EAAD,CAAgBpB,QAASG,EAAakB,QAAO,SAACrB,GAAD,OAAaA,EAAQT,KAAO+B,SAASF,EAAMG,OAAOhC,GAAI,OAAK,QAQhG,kBAAC,IAAD,CAAO4B,UAAWP,MAG1B,kBAAC,EAAD,QCVGY,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASR,MACvB,2DCXNS,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF/C,SAASgD,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a4c58b88.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Header=(props)=>{    \n    return(\n        <header >\n        <button className=\"nav-toggle\" aria-label=\"toggle navigation\" onClick={()=> document.body.classList&& document.body.classList.toggle('nav-open')} >\n            <span className=\"hamburger\"></span>\n        </button>\n        <nav className=\"nav\">\n            <ul className=\"nav__list\">\n                <li className=\"nav__item\"><Link to=\"/portfolio\" className=\"nav__link\" onClick={()=>  document.body.classList.remove('nav-open')} >Home</Link></li>\n                <li className=\"nav__item\"><a href=\"/portfolio#services\" className=\"nav__link\" onClick={()=>  document.body.classList.remove('nav-open')}>My Services</a></li>\n                <li className=\"nav__item\"><a href=\"/portfolio#about\" className=\"nav__link\" onClick={()=>  document.body.classList.remove('nav-open')}>About me</a></li>\n                <li className=\"nav__item\"><a href=\"/portfolio#work\" className=\"nav__link\" onClick={()=>  document.body.classList.remove('nav-open')}>My Work</a></li>\n            </ul>\n        </nav>\n    </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst AboutMe=()=>{\n    return(\n        <section className=\"about-me\" id=\"about\">\n                <h2 className=\"section__title section__title--about\">Who I am</h2>\n                <p className=\"section__subtitle section__subtitle--about\">Software Enginner</p>\n                <div className=\"about-me__body\">\n                    <p>I am a graduate of Business Information System- Helwan University(2019). During college years, I was a part of many students activities in many positions; Web development participant, Quality Control head, Human Resources Management and R&D member then head.\n\n                    Understanding business made me aware of the importance of Developer being aware of the work process, organisation's goals, being initiative, and how to continuously improve the work quality.<br /><br />\n\n                    I joined open source - Application Development in Information Technology Institute(ITI), I am passionate for software engineering, I love that it includes quickly learning new skills, programming languages and being a part of a team working to reach a certain goal. Being a graduate of Information Technology Institute, quickly learning new things was a skill gained under pressure.\n\n                    Recently I am interested in MERN Stack, but also have Java, Python, Laravel, php, Ruby, Angular under my belt. I am still enthusiastically learning new frameworks, technologies, or principles. </p>\n                </div>\n\n                <img src=\"img/adham2.jpg\" alt=\"Jane leaning against a bus\" className=\"about-me__img\" />\n        </section>\n    )\n}\nexport default AboutMe","import React from 'react'\n\nconst Intro = () => {\n    return (\n        <section className=\"intro\" id=\"home\">\n            <h1 className=\"section__title section__title--intro\">\n                Hi, I am <strong>Mohamed <span>Adham</span></strong>\n            </h1>\n            <p className=\"section__subtitle section__subtitle--intro\">Full-Stack developer</p>\n            <img src=\"img/adham-1.jpg\" alt=\"a picture of Mohamed Adham smiling\" className=\"intro__img\" />\n        </section>\n    )\n}\nexport default Intro","import React from 'react'\n\nconst MyServices = () => {\n    return (\n        <section className=\"my-services\" id={\"services\"}>\n                <h2 className=\"section__title section__title--services\">What I do</h2>\n                <div className=\"services\">\n                    <div className=\"service\">\n                        <h3>Front End Development</h3>\n                        <p>Developing the client side using Html, CSS, Javascript, and React or AngularJS</p>\n                    </div>\n\n                    <div className=\"service\">\n                        <h3>Backend Development</h3>\n                        <p>Handle the Backend using NodeJS..Laravel..Ruby on Rails..Django for business logic and SQL or Mongodb for Database .</p>\n                    </div>\n                </div>\n                <a href=\"#work\" className=\"btn\">My Work</a>\n            </section>\n    )\n}\nexport default MyServices","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst MyProjectCard = ({projects}) => {\n    return (\n        <section class=\"my-work\" id=\"work\">\n            <h2 class=\"section__title section__title--work\">PROJECTS I WORKED ON</h2>\n            <p class=\"section__subtitle section__subtitle--work\">A selection of my range of work</p>\n\n            <div class=\"portfolio\">\n                {projects&&\n                   projects.map((project)=>(\n                        <Link to={`/portfolio/project/${project.id}`} class=\"portfolio__item\">\n                            <img src={`img/${project.img}`} alt=\"\" class=\"portfolio__img\" />\n                            <div class=\"middle\">\n                                <div class=\"text\">{project.languages}</div>\n                            </div>\n                        </Link>\n                    ))\n                }\n\n            </div>\n        </section>\n    )\n}\nexport default MyProjectCard","export const projectsData=[\n    {\n        title:\"Wasaly\",\n        description:`Wasaly is web application connecting customers with delivery services and products providers.\n        Its aim to ease the process of buying from local stores giving the customers the ability to get their products from anywhere via delivery service and the local stores the ability to connect to delivery service to eliminate the hustle of providing delivery service and to sell their products and a way to reach more customers.`,\n        languages:\"ReactJS & NodeJS\",\n        featuresIDeveloped:[\n            \"User can Search for products\",\n            \"User can report service\",\n            \"User can Filter products by name and brand name\",\n            \"User can Rate and review for service owners for order\",\n            \"Landing page\",\n            \"Login by Google\",\n            \"Verification of email in registration\",\n            \"Orders/order info page(view)\",\n            \"CRUD Operations for products (product owner)\",\n            \"product Cards\",\n            \"Infinite scrolling and pagination\",\n            \"Sending Notification to service owners connected to the product owner when a order is placed\"\n        ],\n        team:true,\n        img:\"wasaly-01.png\",\n        img2:\"wasaly-02.png\",\n        githublink:\"https://github.com/mohamedadham/Wasaly\",\n        link:\"https://drive.google.com/file/d/1WlfRt4s3z7r5-zKuoypGr8HAf1dWoLPB/view?fbclid=IwAR0rYT8bQmXt2drdmKps5jivOH6LylkZ64qqwtpoHKAvD5-akQap3Blacjs\",\n        id:1,\n    },\n    {\n        title:\"Yalanotlob - MEAN\",\n        description:`Yalanotlob is web application allows the users to make order and add friends or group of friends to their orders.`,\n        languages:\"Angular 9 & NodeJS\",\n        featuresIDeveloped:[\n            \"Session based Authentication System\",\n            \"User can add friends\",\n            \"User can create group\",\n            \"User can place order\",\n            \"User can add friend(s) or a group to his order\",\n            \"User can add/remove his items to the order he created or invited to.\",\n            \"User created the order can cancel/finish it, add/remove any items/order's members.\",\n            \"Push notifications to user when he is invited to order or invited friend joins his order.\"\n        ],\n        team:false,\n        img:\"yalanotlob-mean01.png\",\n        img2:\"yalanotlobmean-02.png\",\n        githublink:\"https://github.com/mohamedadham/Yallanotlob--MEAN\",\n        id:2,\n    },\n    {\n        title:\"GoodReads MockUp\",\n        description:\"It is a Web Application is meant to be as a mock for Good Reads functionalities for developing and learning issues and not by any means violating copyrights. It has two views the admin and user views.\",\n        languages:\"ReactJS & NodeJS\",\n        featuresIDeveloped:[\n            \"Login and JWT\",\n            \"Book Information\",\n            \"User's Books\",\n        ],\n        team:true,\n        img:\"goodreads-01.png\",\n        githublink:\"https://github.com/mohamedadham/goodreads-mock\",\n        id:3,\n    },\n    {\n        title:\"Library Management System\",\n        description:\"It is a Web Application for automating the book leasing and management process of Libraries. It is implemented in Laravel and has two views the admin and user views.\",\n        languages:\"Laravel\",\n        team:true,\n        featuresIDeveloped:[\n            \"User can update his profile\",\n            \"User can filter books by category\",\n            \"User can lease book\",\n        ],\n        img:\"bookstore-02.png\",\n        img2:\"book store-01.png\",\n        githublink:\"https://github.com/mohamedadham/Library-Management-System\",\n        id:4,\n    },\n    {\n        title:\"CrowFunding\",\n        description:\"It is a Web Application for automating the projects' funding activity. It has two views the admin and user views. \",\n        languages:\"Django\",\n        team:true,\n        featuresIDeveloped:[\n            \"User can donate\",\n            \"User can edit his profile\",\n            \"User can search for project by title\",\n            \"User can filter projects by category\",\n        ],\n        img:\"crowd-01.png.png\",\n        githublink:\"https://github.com/mohamedadham/Crowd-Funding-System\",\n        id:5,\n    },\n    {\n        title:\"Yalanotlob\",\n        description:\"Yalanotlob is web application allows the users to make order and add friends or group of friends to their orders.\",\n        languages:\"Rails\",\n        team:true,\n        featuresIDeveloped:[\n            \"List User's Orders\",\n            \"Notification System\",\n            \"Latest Orders\",\n        ],\n        img:\"yalanotlob-01.png\",\n        githublink:\"https://github.com/mohamedadham/Yalanotlob\",\n        id:6,\n    },\n    {\n        title:\"Cafe\",\n        description:\"It is a Web Application for automating the ordering and management process of Cafeterias. It is implemented in PHP and has two views the admin and user views.\",\n        languages:\"PHP\",\n        featueresIDeveloped:\"\",\n        team:true,\n        img:\"cafe-01.png\",\n        githublink:\"https://github.com/mohamedadham/Cafe-php-project\",\n        id:7,\n    },\n    {\n        title:\"Resort Beach\",\n        description:\"Web application to book a room from resort\",\n        languages:\"ReactJS\",\n        team:false,\n        img:\"resort-01.png\",\n        link:\"https://react-resort-app-tutorial.netlify.app/\",\n        githublink:\"https://github.com/mohamedadham/react-beach-resort-tutorial\",\n        id:8,\n    },\n    {\n        title:\"Store and Cart\",\n        description:\"Small project simulate listing products and user can add products to cart\",\n        languages:\"ReactJS\",\n        team:false,\n        img:\"store-01.png\",\n        img2:\"store-02.png\",\n        link:\"https://mohamedadham.github.io/store/\",\n        githublink:\"https://github.com/mohamedadham/store\",\n        id:9,\n    },\n    {\n        title:\"Pomodoro\",\n        description:\"The Pomodoro Technique is a time management method.  The technique uses a timer to break down work into intervals, 25 minutes in length, separated by short breaks.\",\n        languages:\"ReactJS\",\n        team:false,\n        img:\"pomodoro-01.png\",\n        link:\"https://pomodoro-clock-using-react.herokuapp.com/\",\n        githublink:\"https://github.com/mohamedadham/pomodoroClockReact\",\n        id:10,\n    },\n    {\n        title:\"TodoList\",\n        description:\"User can add/remove item from todolist and mark item as important\",\n        languages:\"ReactJS\",\n        team:false,\n        img:\"todo-01.png\",\n        link:\"https://todolistappreact.herokuapp.com/\",\n        githublink:\"https://github.com/mohamedadham/TodoApp\",\n        id:11,\n    }\n]\n\n\n                  ","import React from 'react';\nimport Header from '../components/Header'\nimport AboutMe from '../components/AboutMe'\nimport Intro from '../components/Intro'\nimport MyServices from '../components/MyServices'\nimport MyProjectCard from '../components/MyProjects'\nimport {projectsData} from '../shared/projectsData'\n\nconst LandingPage = (props) => {\n    return (\n        <>\n            <Header />\n            <Intro />\n            <MyServices />\n            <AboutMe />\n            <MyProjectCard projects={projectsData} />         \n        </>\n    )\n}\nexport default LandingPage;","import React from 'react'\nimport Header from './Header'\n\nconst ProjectDetails=({project})=>{\n    return(\n       <>\n        <Header />\n        <section className=\"intro\" >\n            <h1 className=\"section__title section__title--intro\">\n               <strong>{project.title}</strong>\n            </h1>\n    <p className=\"section__subtitle section__subtitle--intro\">{project.team?\"As a part of team\": \"Solo project\"}</p>\n            <img src={`/portfolio/img/${project.img}`} alt=\"\" className=\"intro__img\" />\n        </section>\n        \n        <div className=\"portfolio-item-individual\">\n            <p>{project.description}</p>\n            <img src={`/portfolio/img/${project.img2}`} alt=\"\" />\n            <br />\n             <p><strong>Langauages and Technologies used: </strong> {project.languages}</p>\n            {project.featuresIDeveloped&&<p><strong>Features I Developed:</strong>\n            <ul>\n                {project.featuresIDeveloped.map((feature)=><li>{feature}</li>)}\n            </ul> </p> }\n            {!project.link?\n            <p>\n             <a target=\"_blank\" href={project.githublink} className=\"btn\">Github Repo</a>\n            </p>\n             :\n            <div className=\"project-buttons\"> \n            <a target=\"_blank\" href={project.githublink} className=\"btn\">Github Repo</a> <a target=\"_blank\" href={project.link}className=\"btn\">View</a>\n            </div>\n            }\n\n\n        </div>\n        </>\n     \n    )\n}\nexport default ProjectDetails","import React from 'react'\n\nconst Footer = () => {\n\n    return (\n        <footer className=\"footer\">\n            <a href=\"mailto:mohamedadham27@gmail.com\" className=\"footer__link\">mohamedadham27@gmail.com</a>\n            <ul className=\"social-list\">\n\n                <li className=\"social-list__item\">\n                    <a className=\"social-list__link\" href=\"https://www.linkedin.com/in/mohamed-adham/\">\n                        <i className=\"fab fa-linkedin\"></i>\n                    </a>\n                </li>\n                <li className=\"social-list__item\">\n                    <a className=\"social-list__link\" href=\"https://github.com/mohamedadham/\">\n                        <i className=\"fab fa-github\"></i>\n                    </a>\n                </li>\n            </ul>\n        </footer>\n    )\n}\nexport default Footer;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport LandingPage from '../pages/landingpage'\nimport ProjectDetails from './ProjectDetails'\nimport { projectsData } from '../shared/projectsData'\nimport Footer from './Footer';\n\nconst Main = () => {\n    const ProjectWithId = ({ match }) => {\n        return (\n            <ProjectDetails project={projectsData.filter((project) => project.id === parseInt(match.params.id, 10))[0]} />\n        );\n    };\n    return (\n        <>\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/portfolio/project/:id\" component={ProjectWithId} />\n                    <Route component={LandingPage} />\n                </Switch>\n            </div>\n            <Footer />\n        </>\n\n    )\n}\nexport default Main;","import React from 'react';\nimport './App.css';\nimport './components/Main'\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}